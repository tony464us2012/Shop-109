[{"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\index.js":"1","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\App.js":"2","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\store.js":"3","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\CartScreen.js":"4","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\RegisterScreen.js":"7","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Header.js":"8","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProfileScreen.js":"11","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductListScreen.js":"12","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserListScreen.js":"13","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderScreen.js":"14","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserEditScreen.js":"15","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductEditScreen.js":"16","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\PlaceOrderScreen.js":"17","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderListScreen.js":"18","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\productReducers.js":"19","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\cartReducers.js":"20","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\userReducers.js":"21","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\orderReducers.js":"22","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Loader.js":"23","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Message.js":"24","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\cartActions.js":"26","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\userActions.js":"27","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Meta.js":"28","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Paginate.js":"29","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProductCarousel.js":"30","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Product.js":"31","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\productActions.js":"33","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\types.js":"34","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\MenuHeader.js":"35","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\MenuScreen.js":"36","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Beer.js":"37","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\BeerHeader.js":"38","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Sour.js":"39","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Lager.js":"40","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\IPA.js":"41","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Cider.js":"42","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\PorterandStout.js":"43","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Special.js":"44","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Ale.js":"45","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Burger.js":"46","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Appetizer.js":"47","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\ForkandKnife.js":"48","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Salad.js":"49","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Sandwich.js":"50","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Slider.js":"51","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Side.js":"52","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProfileListHeader.js":"53","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\AddOns.js":"54","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\MenuItem.js":"55","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\Beers.js":"56","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Modal.js":"57","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\CardSection.js":"58"},{"size":316,"mtime":1610764473383,"results":"59","hashOfConfig":"60"},{"size":2536,"mtime":1614738401522,"results":"61","hashOfConfig":"60"},{"size":2115,"mtime":1610933597894,"results":"62","hashOfConfig":"60"},{"size":4583,"mtime":1614564601224,"results":"63","hashOfConfig":"60"},{"size":925,"mtime":1611195757085,"results":"64","hashOfConfig":"60"},{"size":427,"mtime":1610904498659,"results":"65","hashOfConfig":"60"},{"size":3260,"mtime":1610838493217,"results":"66","hashOfConfig":"60"},{"size":4547,"mtime":1614562337732,"results":"67","hashOfConfig":"60"},{"size":3943,"mtime":1611282947583,"results":"68","hashOfConfig":"60"},{"size":2275,"mtime":1610839126239,"results":"69","hashOfConfig":"60"},{"size":5587,"mtime":1610935098652,"results":"70","hashOfConfig":"60"},{"size":4228,"mtime":1611804203103,"results":"71","hashOfConfig":"60"},{"size":2985,"mtime":1611544404489,"results":"72","hashOfConfig":"60"},{"size":7440,"mtime":1610933935487,"results":"73","hashOfConfig":"60"},{"size":3098,"mtime":1610764474454,"results":"74","hashOfConfig":"60"},{"size":6517,"mtime":1611540976582,"results":"75","hashOfConfig":"60"},{"size":7852,"mtime":1615000950901,"results":"76","hashOfConfig":"60"},{"size":2750,"mtime":1610764474017,"results":"77","hashOfConfig":"60"},{"size":2820,"mtime":1612149853740,"results":"78","hashOfConfig":"60"},{"size":613,"mtime":1614652750637,"results":"79","hashOfConfig":"60"},{"size":3727,"mtime":1610764473732,"results":"80","hashOfConfig":"60"},{"size":3291,"mtime":1610933483045,"results":"81","hashOfConfig":"60"},{"size":350,"mtime":1610764472928,"results":"82","hashOfConfig":"60"},{"size":295,"mtime":1610764472949,"results":"83","hashOfConfig":"60"},{"size":398,"mtime":1610764472828,"results":"84","hashOfConfig":"60"},{"size":976,"mtime":1614652708722,"results":"85","hashOfConfig":"60"},{"size":6227,"mtime":1610764472576,"results":"86","hashOfConfig":"60"},{"size":517,"mtime":1610812922076,"results":"87","hashOfConfig":"60"},{"size":644,"mtime":1614309806142,"results":"88","hashOfConfig":"60"},{"size":678,"mtime":1610935032526,"results":"89","hashOfConfig":"60"},{"size":1145,"mtime":1614561744860,"results":"90","hashOfConfig":"60"},{"size":4338,"mtime":1610939381493,"results":"91","hashOfConfig":"60"},{"size":3968,"mtime":1611537987974,"results":"92","hashOfConfig":"60"},{"size":3622,"mtime":1614652189664,"results":"93","hashOfConfig":"60"},{"size":1889,"mtime":1612230563329,"results":"94","hashOfConfig":"60"},{"size":2385,"mtime":1614479587848,"results":"95","hashOfConfig":"60"},{"size":2096,"mtime":1611720655751,"results":"96","hashOfConfig":"60"},{"size":1716,"mtime":1612230624083,"results":"97","hashOfConfig":"60"},{"size":536,"mtime":1611718007818,"results":"98","hashOfConfig":"60"},{"size":540,"mtime":1611718031514,"results":"99","hashOfConfig":"60"},{"size":532,"mtime":1611717932536,"results":"100","hashOfConfig":"60"},{"size":540,"mtime":1611718056674,"results":"101","hashOfConfig":"60"},{"size":576,"mtime":1611718023319,"results":"102","hashOfConfig":"60"},{"size":548,"mtime":1611718047155,"results":"103","hashOfConfig":"60"},{"size":532,"mtime":1611718039010,"results":"104","hashOfConfig":"60"},{"size":542,"mtime":1611718766875,"results":"105","hashOfConfig":"60"},{"size":558,"mtime":1611718767813,"results":"106","hashOfConfig":"60"},{"size":545,"mtime":1611718765857,"results":"107","hashOfConfig":"60"},{"size":538,"mtime":1611718764938,"results":"108","hashOfConfig":"60"},{"size":552,"mtime":1611718764064,"results":"109","hashOfConfig":"60"},{"size":542,"mtime":1611718761502,"results":"110","hashOfConfig":"60"},{"size":534,"mtime":1611718762863,"results":"111","hashOfConfig":"60"},{"size":951,"mtime":1612230679330,"results":"112","hashOfConfig":"60"},{"size":1377,"mtime":1611801697249,"results":"113","hashOfConfig":"60"},{"size":1389,"mtime":1611801722885,"results":"114","hashOfConfig":"60"},{"size":1379,"mtime":1611802265211,"results":"115","hashOfConfig":"60"},{"size":19984,"mtime":1614551023839,"results":"116","hashOfConfig":"60"},{"size":735,"mtime":1614916997752,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"wtb28q",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\index.js",[],["246","247"],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\App.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\store.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\CartScreen.js",["248"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart \r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n       <Row>\r\n           <Col md={9}>\r\n               <h1>Shopping Cart</h1>\r\n               {cartItems.length === 0 ? <Message>Your cart is empty<Link to='/'> Go Back</Link></Message> : (\r\n                   <ListGroup variant='flush'>\r\n                       {cartItems.map(item => (\r\n                           <ListGroup.Item style={{paddingRight: '2.5rem'}}>\r\n                               <Row>\r\n                                   <Col md={2}>\r\n                                       <Image src={item.image} alt={item.name} fluid rounded />\r\n                                   </Col>\r\n                                <Col md={3}>\r\n                                   <h5>{item.name}</h5>\r\n                                </Col>\r\n                                <Col md={2}>${item.price}</Col>\r\n                                <Col md={1} style={{marginLeft: 'auto'}}>\r\n                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                               </Row>\r\n                               <Row>\r\n                                 <Col md={2}></Col>\r\n                                {item.large ? <Col md={3}>Large</Col> : ''}\r\n                                {item.sauce ? <Col md={3}> {item.sauce}</Col> : ''}\r\n                                {item.burger ? <Col md={3}>Burger: {item.burger}</Col> : ''}\r\n                                {item.extraPatty ? <Col md={3}>{item.extraPatty}</Col> : ''}\r\n                                {item.pattySwap ? <Col md={3}>{item.pattySwap}</Col> : ''}\r\n                                {item.extras ? <Col md={3}>{item.extras.map(extra => <p>{extra}</p>)}</Col> : ''}\r\n                                {item.sideSwap ? <Col md={3}>Side: {item.sideSwap}</Col> : ''}\r\n                                {item.upgradeSide ? <Col md={3}>Side: {item.upgradeSide}</Col> : ''}\r\n                                {item.fryAddOn ? <Col md={3}>Side Add: {item.fryAddOn}</Col> : ''}\r\n                               </Row>\r\n                               <Row>\r\n                                   {item.instructions ? <Col style={{marginTop: '1rem'}} md={8}>Instructions: {item.instructions}</Col> : '' }\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                       ))}\r\n                   </ListGroup>\r\n               )}\r\n           </Col>\r\n           <Col md={3}>\r\n               <Card>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                           <h2>Subtotal</h2>\r\n                           ${cartItems.reduce((acc, item) => acc + item.price, 0).toFixed(2)}\r\n                           <h2>Tax</h2>\r\n                           ${(cartItems.reduce((acc, item) => acc + item.price, 0) * .07).toFixed(2)}\r\n                           <h2>Total</h2>\r\n                           ${Number(cartItems.reduce((acc, item) => acc + item.price, 0).toFixed(2))  + Number((cartItems.reduce((acc, item) => acc + item.price, 0) * .07).toFixed(2))}\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>PROCEED TO CHECKOUT</Button>\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Card>\r\n           </Col>\r\n       </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\HomeScreen.js",["249","250","251","252","253","254","255","256"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\nconst HomeScreen = () => {\r\n  \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            <ProductCarousel />\r\n            {/* {!keyword ? (<ProductCarousel />) : (<Link to='/' className='btn btn-light'>Go Back</Link>) } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Header.js",["257","258"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown, Form, FormControl, Button, Img } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n  \r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const [date, setDate] = useState(new Date())\r\n\r\n    useEffect(() => {\r\n        var timerID = setInterval( () => tick(), 1000 );\r\n        return function cleanup() {\r\n            clearInterval(timerID);\r\n          }\r\n       })\r\n         function tick() {setDate(new Date())}\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n               <Container>\r\n                   <h6>{date.toLocaleTimeString()}</h6>\r\n                   <LinkContainer to='/' className='mr-auto ml-4'>\r\n                       <img src='/images/109_Logo.png' variant='top' width='6%' height='6%' />\r\n                   </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                        {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/'>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) :  (\r\n                            <>\r\n                            <LinkContainer to='/login' >\r\n                            <Nav.Link><i className=\"fas fa-sign-in-alt\"></i> Log In</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/register' >\r\n                            <Nav.Link><i className=\"fas fa-user-plus\"></i> Sign Up</Nav.Link>\r\n                            </LinkContainer>\r\n                           </>)}\r\n                    {userInfo && userInfo.isAdmin && (\r\n                               <NavDropdown title='Admin' id='adminmenu'>\r\n                               <LinkContainer to='/admin/userlist'>\r\n                                   <NavDropdown.Item>Users</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                               <LinkContainer to='/admin/productlist'>\r\n                                   <NavDropdown.Item>Products</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                               <LinkContainer to='/admin/orderlist'>\r\n                                   <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                           </NavDropdown>\r\n                    )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n               </Container>\r\n            </Navbar>\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n                <Nav className=\"mr-auto ml-5\">\r\n                <Nav.Link id='navItem' href='/'>HOME</Nav.Link>\r\n                <Nav.Link id='navItem' href='/menu'>MENU</Nav.Link>\r\n                <Nav.Link id='navItem' href='#'>109 REWARDS</Nav.Link>\r\n                <Nav.Link id='navItem' href='#'>DELIVERY</Nav.Link>\r\n                </Nav>\r\n                <Form inline>\r\n                <FormControl type=\"text\" placeholder='Enter a promo code' className=\"mr-sm-2\" />\r\n                <Button variant=\"success\" size='sm'>Apply</Button>\r\n                </Form>\r\n                <LinkContainer to='/cart' className='ml-2' style={{color: '#000'}}>\r\n                    <Nav.Link><i className=\"fas fa-shopping-cart\"></i>{'  $'}{Number(cartItems.reduce((acc, item) => acc + item.price, 0).toFixed(2))  + Number((cartItems.reduce((acc, item) => acc + item.price, 0) * .07).toFixed(2))}</Nav.Link>\r\n                </LinkContainer>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProfileScreen.js",["259"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { myOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const myOrdersList = useSelector(state => state.myOrders)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = myOrdersList\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n          if(!userInfo.name) {\r\n              dispatch(getUserDetails('profile'))\r\n              dispatch(myOrders())\r\n          } else {\r\n              setName(userInfo.name)\r\n              setEmail(userInfo.email)\r\n          }\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: userInfo._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h1>User Profile</h1>\r\n            {errorOrders && <Message variant='danger'>{errorOrders}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loadingOrders && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2 style={{color: 'black'}}>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.length === 0 ? <h2 style={{color: 'black'}}>No Orders</h2> : orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>09/12/2020</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                     <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <Link to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductListScreen.js",["260"],"import React, { useEffect, useState } from 'react'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ProductListHeader from '../components/ProfileListHeader'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { deleteProduct, createProduct, listProductDetails, updateProduct } from '../actions/productActions'\r\nimport MenuItem from '../components/product-list-components/MenuItem'\r\nimport Beers from '../components/product-list-components/Beers'\r\nimport AddOns from '../components/product-list-components/AddOns'\r\n\r\n\r\nconst ProductListScreen = ({ history }) => {\r\n\r\n    const [tab, setTab] = useState('MenuItems')\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n    \r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete\r\n    \r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct } = productCreate\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const availableHandler = (product) => {\r\n        dispatch(updateProduct(product))\r\n        console.log(product)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } \r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }\r\n    }, [dispatch, history, products,  userInfo, successDelete, successCreate, availableHandler])\r\n    \r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure?')) {\r\n           dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const getProductHandler = (id) => {\r\n        dispatch(listProductDetails(id))\r\n    }\r\n\r\n    const menuitems = products.filter(menuitem => menuitem.category !== 'Beer' && menuitem.category !== 'AddOns')\r\n    const beers = products.filter(beer => beer.category === 'Beer')\r\n    const addons = products.filter(addon => addon.category === 'AddOns')\r\n\r\n    console.log(menuitems)\r\n    console.log(beers)\r\n\r\n    const tabHandler = (tab) => {\r\n        setTab(tab)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                <ProductListHeader tabHandler={tabHandler} tab={tab}/>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Item\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n            (<>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                        </tr>\r\n                    </thead>\r\n                        {tab === 'MenuItems' ? <MenuItem menuitems={menuitems} getProductHandler={getProductHandler} deleteHandler={deleteHandler} /> :\r\n                        tab === 'Beers' ? <Beers beers={beers} getProductHandler={getProductHandler} deleteHandler={deleteHandler}/> :\r\n                        <AddOns addons={addons} getProductHandler={getProductHandler} deleteHandler={deleteHandler}/> \r\n                        }\r\n                </Table>\r\n            </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderScreen.js",["261","262","263"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Card, Image, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../actions/types'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n   \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n   \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n   \r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPay\r\n  \r\n\r\n    if(!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100)/100).toFixed(2)\r\n        }\r\n        order.orderPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0 ))\r\n    }\r\n\r\n    useEffect(() => {\r\n    if(!userInfo) {\r\n        history.push('/login')\r\n    }\r\n        const addPayPalScript = async (orderId) => {\r\n             const { data: clientId } = await axios.get('api/config/paypal')\r\n             const script = document.createElement('script')\r\n             script.type = 'text/javascript'\r\n             script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n             script.async = true\r\n             script.onload = () => {\r\n                 setSdkReady(true)\r\n             }\r\n             document.body.appendChild(script)\r\n        }\r\n        if(!order || successPay ) {\r\n            dispatch({ type: ORDER_PAY_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [dispatch, order, orderId, successPay])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : \r\n    <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>Name: {order.user.name}</p>\r\n                            <p>Email: <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                Address: \r\n                                {' '} {order.shippingAddress.address}, {order.shippingAddress.city} {' '} {order.shippingAddress.postalCode}, {' '} {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (<Message variant='success'>Delivered on {order.paidAt} </Message>) : (<Message variant='danger'>Not Delivered</Message>)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                            Method:\r\n                            {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (<Message variant='success'>Paid on {order.paidAt} </Message>) : (<Message variant='danger'>Not Paid</Message>)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.orderPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice.toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total Price</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                     )} \r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductEditScreen.js",["264","265","266"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../actions/types'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    const [available, setAvailable] = useState(true)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product} = productDetails\r\n   \r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loadingUpdate, error:errorUpdate, success:successUpdate} = productUpdate\r\n\r\n    \r\n    useEffect(() => {\r\n            if(successUpdate) {\r\n                dispatch({ type: PRODUCT_UPDATE_RESET})\r\n                history.push('/admin/productlist')\r\n            } else {\r\n                if(!product.name || product._id !== productId) {\r\n                    dispatch(listProductDetails(productId))\r\n                } else {\r\n                    setName(product.name)\r\n                    setPrice(product.price)\r\n                    setImage(product.image)\r\n                    setCategory(product.category)\r\n                    setDescription(product.description)\r\n                    setAvailable(product.available)\r\n                }\r\n            }\r\n    }, [dispatch, productId, product, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            category,\r\n            description,\r\n            available\r\n        }))\r\n    }\r\n    \r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                header: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <LinkContainer to='/admin/productlist' className='btn btn-light my-3'>\r\n        <Button variant=\"outline-secondary\" size='lg'>Back</Button>\r\n        </LinkContainer>\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control type='number' placeholder='Enter Price' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-custom\" custom>\r\n                    <Form.File.Input isValid />\r\n                    <Form.File.Label data-browse=\"Choose File\">\r\n                        ...\r\n                    </Form.File.Label>\r\n                    </Form.File>\r\n                </div>\r\n                {/* <Form.Group controlId='image'>\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter image url' value={image} onChange={(e) => setImage(e.target.value)}></Form.Control>\r\n                    <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control as='select' placeholder='Enter category' value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                        <option value='Burger'>Burger</option>\r\n                        <option value='Salad'>Salad</option>\r\n                        <option value='Appetizer'>Appetizer</option>\r\n                        <option value='ForkandKnife'>ForkandKnife</option>\r\n                        <option value='Sandwich'>Sandwich</option>\r\n                        <option value='Slider'>Slider</option>\r\n                        <option value='Side'>Side</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter description' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Available?</Form.Label>\r\n                    <Form.Control as='select' value={available} onChange={(e) => setAvailable(e.target.value)}>\r\n                        <option value={true}>True</option>\r\n                        <option value={false}>False</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            )}\r\n        </FormContainer>\r\n      </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProductCarousel.js",["267","268","269","270","271","272"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n           <p>Carousel goes here</p>\r\n           <p>Carousel goes here2</p>\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Product.js",["273"],"import React, { useState } from 'react'\r\nimport { listProductDetails } from '../actions/productActions'\r\nimport { useDispatch} from 'react-redux'\r\nimport {Card} from 'react-bootstrap'\r\nimport ProductModal from './Modal'\r\n\r\nconst Product = ({ product }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <>\r\n            <a  onClick={() => {setModalShow(true); dispatch(listProductDetails(product._id))}}>\r\n                <Card className='my-3 p-3 rounded card' style={{width: '18rem'}} >\r\n                        <Card.Img src={product.image} variant='top' />\r\n                    <Card.Body>\r\n                            <Card.Title as='div'><strong className='title-text'>{product.name}</strong></Card.Title>\r\n                        <Card.Text as='h6'> ${product.price} </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </a>\r\n            {modalShow ? <ProductModal show={modalShow} onHide={() => setModalShow(false)} key={product._id} id={product._id} price={product.price}/> : '' }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\MenuHeader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\MenuScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Beer.js",["274","275"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport BeerHeader from './BeerHeader'\r\nimport IPA from './beer-components/IPA'\r\nimport Lager from './beer-components/Lager'\r\nimport Ale from './beer-components/Ale'\r\nimport Sour from './beer-components/Sour'\r\nimport Cider from './beer-components/Cider'\r\nimport PorterandStout from './beer-components/PorterandStout'\r\nimport Special from './beer-components/Special'\r\n\r\n\r\nconst Beer = () => {\r\n    \r\n    const [beerTab, setBeerTab] = useState('IPA')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const ipa = products.filter(product => product.typeofBeer === 'IPA')\r\n    const lager = products.filter(product => product.typeofBeer === 'Lager')\r\n    const porterandstout = products.filter(product => product.typeofBeer === 'PorterandStout')\r\n    const sour = products.filter(product => product.typeofBeer === 'Sour')\r\n    const ale = products.filter(product => product.typeofBeer === 'Ale')\r\n    const cider = products.filter(product => product.typeofBeer === 'Cider')\r\n    const special = products.filter(product => product.typeofBeer === 'Special')\r\n\r\n    \r\n    const beerTabHandler = (tab) => {\r\n        setBeerTab(tab)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BeerHeader beerTabHandler={beerTabHandler} beerTab={beerTab} />\r\n            {beerTab === 'IPA' ? <IPA ipa={ipa} /> :\r\n             beerTab === 'Lager' ? <Lager lager={lager}/> :\r\n             beerTab === 'PorterandStout' ?  <PorterandStout porterandstout={porterandstout} /> :\r\n             beerTab === 'Sour' ?  <Sour sour={sour} /> :\r\n             beerTab === 'Ale' ? <Ale ale={ale} /> : \r\n             beerTab === 'Cider' ? <Cider cider={cider} /> :\r\n             <Special special={special} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beer","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\BeerHeader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Sour.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Lager.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\IPA.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Cider.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\PorterandStout.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Special.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Ale.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Burger.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Appetizer.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\ForkandKnife.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Salad.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Sandwich.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Slider.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Side.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProfileListHeader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\AddOns.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\MenuItem.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\Beers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Modal.js",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React, { useState, useRef, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Image, Col, Form } from 'react-bootstrap'\r\nimport { addToCart } from '../actions/cartActions'\r\nimport { PRODUCT_DETAILS_RESET } from '../actions/types'\r\nimport Loader from './Loader'\r\n\r\n\r\nconst ProductModal = ({show, onHide, id, price}) => {\r\n    const dispatch = useDispatch()\r\n   \r\n    const productDetail = useSelector(state => state.productDetails)\r\n    const { loading, product:productInfo } = productDetail\r\n    const { name, image, description, category, available } = productInfo\r\n    \r\n      const productList = useSelector(state => state.productList)\r\n      const { products } = productList\r\n\r\n      const [itemPrice, setItemPrice] = useState(price)\r\n      const [extraPatty, setExtraPatty] = useState('')\r\n      const [pattySwap, setPattySwap] = useState('')\r\n      const [sideSwap, setSideSwap] = useState('')\r\n      const [upgradeSide, setUpgradeSide] = useState('')\r\n      const [extras, setExtras] = useState([])\r\n      const [large, setLarge] = useState(false)\r\n      const [sauce, setSauce] = useState('')\r\n      const [burger, setBurger] = useState('')\r\n      const [fryAddOn, setFryAddOn] = useState('')\r\n      const [instructions, setInstructions] = useState('')\r\n      const ref = useRef(price)\r\n\r\n      \r\n    const addons = products.filter(product => product.category === 'AddOns')\r\n    const largefrysampler = addons.filter(sampler =>  sampler.addOnType === 'LargeFrySampler')\r\n    const [{ price:samplerPrice, available:samplerAvailable }] = largefrysampler\r\n    const largechickenwings = addons.filter(wings => wings.addOnType === 'LargeChickenWings')\r\n    const [{price:wingPrice, available:wingAvailable}] = largechickenwings\r\n    const addMeat = addons.filter(meat => meat.name === 'Extra Meat Patty')\r\n    const [{name:meatName, price:meatPrice, available:meatAvailable}] = addMeat\r\n    const chicken = addons.filter(chk => chk.addOnType === 'Chicken')\r\n    const [{name:chickenName, price:chickenPrice, available:chickenAvailable}] = chicken\r\n    const bacon = addons.filter(bcn => bcn.addOnType === 'Bacon')\r\n    const [{name:baconName, price:baconPrice, available:baconAvailable}] = bacon\r\n\r\n      const handleChange = (e) => {setInstructions(e.target.value)}\r\n      const radioChange = (e) => {\r\n        let { name, value } = e.target\r\n        let newValue = extractPrice(value)\r\n\r\n        if (name === 'frysampler' || name === 'chickenwings') {\r\n          if (newValue) {\r\n            setLarge(true)\r\n            ref.current = ref.current + newValue\r\n          } else {\r\n            setLarge(false)\r\n            ref.current = price\r\n          }\r\n        }\r\n        if(name === 'sauce') {\r\n          setSauce(value)\r\n        }\r\n        if (name === 'meat' && e.target.checked) {\r\n          setExtraPatty(value)\r\n          ref.current = ref.current + (extractPrice(value))\r\n        }\r\n        if (name === 'meat' && !e.target.checked) {\r\n          setExtraPatty('')\r\n          ref.current = ref.current - (extractPrice(value))\r\n        }\r\n        if (name === 'SwapOption') {\r\n          if (!pattySwap){\r\n            setPattySwap(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(pattySwap)\r\n            setPattySwap(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'SwapSide') {\r\n          if (!sideSwap) {\r\n            setSideSwap(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(sideSwap)\r\n            setSideSwap(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'UpgradeSide') {\r\n          if (!upgradeSide) {\r\n            setUpgradeSide(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(upgradeSide)\r\n            setUpgradeSide(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'Extras' && e.target.checked || name === 'bacon' && e.target.checked || name === 'chicken' && e.target.checked) {\r\n          setExtras([...extras, value])\r\n          ref.current = ref.current + newValue\r\n        }\r\n        if (name === 'Extras' && !e.target.checked || name === 'bacon' && !e.target.checked || name === 'chicken' && !e.target.checked) {\r\n         const newArray = extras.filter(x => x !== value)\r\n         setExtras(newArray)\r\n         ref.current = ref.current - newValue \r\n        }\r\n        if (name === 'burger') {\r\n          if (!burger) {\r\n            setBurger(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(burger)\r\n            setBurger(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'fryAddOn') {\r\n          setFryAddOn(value)\r\n          ref.current = ref.current + newValue\r\n        }\r\n        }\r\n\r\n    const extractPrice = (string) => {\r\n      if(string) {\r\n        return Number(string.split('+')[1])\r\n      } else {\r\n        return 0\r\n      }\r\n    }\r\n\r\n    const addToCartHandler = (e) => {\r\n      e.preventDefault()\r\n      const cartItem = {\r\n        id,\r\n        name,\r\n        image,\r\n        price: ref.current,\r\n        extraPatty, \r\n        pattySwap,\r\n        sideSwap,\r\n        upgradeSide,\r\n        extras,\r\n        large,\r\n        sauce, \r\n        burger,\r\n        fryAddOn,\r\n        instructions\r\n      }\r\n      onHide()\r\n      dispatch(addToCart(cartItem))\r\n      console.log(cartItem)\r\n    }\r\n    \r\n    const white = {backgroundColor: 'white', color: 'grey', paddingBottom: '1rem'}\r\n\r\n    return (\r\n        <>\r\n            { \r\n              loading ? <Loader /> :\r\n                <Modal\r\n                  size=\"lg\"\r\n                  aria-labelledby=\"contained-modal-title-vcenter\"\r\n                  centered\r\n                  show={show}\r\n                  onHide={onHide}\r\n                >\r\n                  <Modal.Header closeButton style={white}>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                      <Col>{name}</Col>\r\n                    </Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body style={white}>\r\n                      {description ?<Col> <p> {description} </p></Col> : ''}\r\n                      {image ? <Col ><Image src={image} alt={name}/></Col> : ''}\r\n                      <Form onSubmit={addToCartHandler}>\r\n                        {name === 'Fry Sampler' ? \r\n                         <Fragment>\r\n                          <h6>Select Size:</h6>\r\n                            <input type=\"radio\" id=\"frysampler\" name=\"frysampler\" value={`Small +0`} onChange={radioChange} required />\r\n                            <label htmlFor=\"smallfrysampler\"> Small </label><br/>\r\n                            {samplerAvailable ? <><input type=\"radio\" id=\"frysampler\" name=\"frysampler\" value={`Large +${samplerPrice}`} onChange={radioChange} required/>\r\n                            <label htmlFor=\"largefrysampler\">{`Large +${samplerPrice}`}</label></> : ''}\r\n                         </Fragment>\r\n                        : ''\r\n                      }\r\n                        {name === 'Chicken Wings 8 Piece' ? \r\n                         <Fragment>\r\n                          <h6>Select Size:</h6>\r\n                            <input type=\"radio\" name=\"chickenwings\" value={`8 Pieces +0`} onChange={radioChange} required />\r\n                            <label htmlFor=\"chickenwings\"> 8 Pieces </label><br/>\r\n                            {wingAvailable ? <><input type=\"radio\" name='chickenwings' value={`15 Pieces +${wingPrice}`} onChange={radioChange} required/>\r\n                            <label htmlFor='chickenwings'>{`15 Pieces +${wingPrice}`}</label></> : ''}\r\n                         </Fragment>\r\n                        : ''\r\n                      }\r\n                      {name === 'Chicken Wings 8 Piece' || name === 'Duck Wings' ? \r\n                      <Form.Group>\r\n                       <h6>Select Sauce:</h6>\r\n                         <input type=\"radio\" name=\"sauce\" value={'Asian Chili Sauce'} onChange={radioChange} required />\r\n                         <Form.Label htmlFor=\"sauce\">Asian Chili Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'Blue Cheese BBQ Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>Blue Cheese BBQ Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'Honey Ginger Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>Honey Ginger Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'House BBQ Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>House BBQ Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'Spicy Buffalo Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>Spicy Buffalo Sauce</Form.Label>\r\n                      </Form.Group>\r\n                     : ''\r\n                      }\r\n                      { category === 'Burger' ? \r\n                        <Fragment>\r\n                          { meatAvailable ? \r\n                          <Form.Group>\r\n                            <h6>Add Ons</h6>\r\n                              <input type=\"checkbox\" name=\"meat\" selected={extraPatty} value={`${meatName} +${meatPrice}`} onChange={radioChange}/>\r\n                              <Form.Label htmlFor=\"meat\">{`${meatName} +${meatPrice}`}</Form.Label><br/>\r\n                          </Form.Group> : ''}\r\n                          <Form.Group>\r\n                            <h6>Swap Patty</h6>\r\n                            <div id=\"SwapPatty\">\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'SwapOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" className=\"checkbox\"  name='SwapOption' selected={`${addon.name} +${addon.price}` === pattySwap } value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"SwapOption\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                            </div>\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <h6>Extras</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'Extras').map(addon => \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"Extras\" value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"Extras\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <h6>Swap Side</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'SwapSideOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"SwapSide\" disabled={upgradeSide} selected={`${addon.name} +${addon.price}` === sideSwap } value={`${addon.name} +${addon.price}`}  onChange={radioChange}/>\r\n                                      <Form.Label htmlFor=\"SwapSide\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <h6>Upgrade Side</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'UpgradeOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"UpgradeSide\" disabled={sideSwap} selected={`${addon.name} +${addon.price}` === upgradeSide } value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"UpgradeSide\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n\r\n                        </Fragment>: ''\r\n                      }\r\n                      { category === 'Salad' && name !== 'Burger In A Bowl' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Add-Ons</h6>\r\n                            {\r\n                              name === 'Caesar Salad' && baconAvailable ? \r\n                              <>\r\n                              <input type=\"checkbox\" name=\"bacon\" value={`${baconName} +${baconPrice}`} onChange={radioChange} />\r\n                              <Form.Label htmlFor=\"Bacon\">{`${baconName} +${baconPrice}`}</Form.Label><br/>\r\n                          </> : ''\r\n                            }\r\n                              {\r\n                                chickenAvailable ? \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"chicken\" value={`${chickenName} +${chickenPrice}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"sauce\">{`${chickenName} +${chickenPrice}`}</Form.Label><br/>\r\n                                  </> : ''\r\n                                \r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      { name === 'Burger In A Bowl' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Select Burger</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'BurgerInABowl').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"burger\" value={`${addon.name} +${addon.price}`} onChange={radioChange} required />\r\n                                      <Form.Label htmlFor=\"Burger\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      { name === 'Homemade Mac & Cheese' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Add-Ons</h6>\r\n                              {\r\n                                baconAvailable ? \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"bacon\" value={`${baconName} +${baconPrice}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"Bacon\">{`${baconName} +${baconPrice}`}</Form.Label><br/>\r\n                                  </> : ''\r\n                              }\r\n                              {\r\n                                chickenAvailable ? \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"chicken\" value={`${chickenName} +${chickenPrice}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"Chicken\">{`${chickenName} +${chickenPrice}`}</Form.Label><br/>\r\n                                  </> : ''\r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      { category === 'Sandwich' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Upgrade Option</h6>\r\n                            {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'UpgradeOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"UpgradeSide\" value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"UpgradeSide\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      {\r\n                        name === 'Fries' ||  name === 'Tots' ? \r\n                        <Fragment>\r\n                        <Form.Group>\r\n                          <h6>Add-Ons</h6>\r\n                          {\r\n                              addons.filter(addon => addon.available && addon.name === 'Loaded up with Cheese & Applewood Smoked Bacon Bits').map(addon => \r\n                                <>\r\n                                    <input type=\"radio\" name=\"fryAddOn\" value={`${addon.name} +${addon.price}`} onChange={radioChange} required />\r\n                                    <Form.Label htmlFor=\"fryAddOn\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                </>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n                      </Fragment>: ''\r\n                      }\r\n                      {\r\n                        name === 'Sweet Potato Fries' ||  name === 'Sweet Potato Tots' ? \r\n                        <Fragment>\r\n                        <Form.Group>\r\n                          <h6>Add-Ons</h6>\r\n                          {\r\n                              addons.filter(addon => addon.available && addon.name === 'Loaded up With Caramel & Cinnamon').map(addon => \r\n                                <>\r\n                                    <input type=\"radio\" name=\"fryAddOn\" value={`${addon.name} +${addon.price}`} onChange={radioChange} required />\r\n                                    <Form.Label htmlFor=\"fryAddOn\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                </>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n                      </Fragment>: ''\r\n                      }\r\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>List Any Preferences</Form.Label>\r\n                        <Form.Text as=\"textarea\" placeholder='allergies, etc.' width='100%' value={instructions} onChange={handleChange} rows={3} />\r\n                      </Form.Group>\r\n                    {available ? \r\n                    <input type='submit' value={`Add To Cart $${ref.current ? ref.current : itemPrice}`}/> :\r\n                    <input type='submit' value='Out of Stock' disabled /> \r\n                  }\r\n                      </Form>\r\n                  </Modal.Body>\r\n                </Modal>\r\n            }\r\n        </>\r\n            );\r\n}\r\n\r\nexport default ProductModal\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\CardSection.js",[],{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":4,"column":38,"nodeType":"297","messageId":"298","endLine":4,"endColumn":42},{"ruleId":"295","severity":1,"message":"299","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"300","line":3,"column":23,"nodeType":"297","messageId":"298","endLine":3,"endColumn":34},{"ruleId":"295","severity":1,"message":"301","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":13},{"ruleId":"295","severity":1,"message":"302","line":4,"column":15,"nodeType":"297","messageId":"298","endLine":4,"endColumn":18},{"ruleId":"295","severity":1,"message":"303","line":5,"column":8,"nodeType":"297","messageId":"298","endLine":5,"endColumn":15},{"ruleId":"295","severity":1,"message":"304","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":16},{"ruleId":"295","severity":1,"message":"305","line":7,"column":8,"nodeType":"297","messageId":"298","endLine":7,"endColumn":15},{"ruleId":"295","severity":1,"message":"306","line":8,"column":8,"nodeType":"297","messageId":"298","endLine":8,"endColumn":14},{"ruleId":"295","severity":1,"message":"307","line":4,"column":74,"nodeType":"297","messageId":"298","endLine":4,"endColumn":77},{"ruleId":"308","severity":1,"message":"309","line":37,"column":24,"nodeType":"310","endLine":37,"endColumn":95},{"ruleId":"295","severity":1,"message":"311","line":15,"column":12,"nodeType":"297","messageId":"298","endLine":15,"endColumn":19},{"ruleId":"312","severity":1,"message":"313","line":43,"column":8,"nodeType":"314","endLine":43,"endColumn":96,"suggestions":"315"},{"ruleId":"295","severity":1,"message":"316","line":5,"column":44,"nodeType":"297","messageId":"298","endLine":5,"endColumn":50},{"ruleId":"295","severity":1,"message":"317","line":9,"column":37,"nodeType":"297","messageId":"298","endLine":9,"endColumn":49},{"ruleId":"295","severity":1,"message":"318","line":10,"column":27,"nodeType":"297","messageId":"298","endLine":10,"endColumn":46},{"ruleId":"295","severity":1,"message":"319","line":20,"column":12,"nodeType":"297","messageId":"298","endLine":20,"endColumn":21},{"ruleId":"312","severity":1,"message":"320","line":48,"column":8,"nodeType":"314","endLine":48,"endColumn":53,"suggestions":"321"},{"ruleId":"295","severity":1,"message":"322","line":63,"column":11,"nodeType":"297","messageId":"298","endLine":63,"endColumn":28},{"ruleId":"295","severity":1,"message":"299","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":14},{"ruleId":"295","severity":1,"message":"323","line":3,"column":20,"nodeType":"297","messageId":"298","endLine":3,"endColumn":25},{"ruleId":"295","severity":1,"message":"324","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":21},{"ruleId":"295","severity":1,"message":"300","line":4,"column":23,"nodeType":"297","messageId":"298","endLine":4,"endColumn":34},{"ruleId":"295","severity":1,"message":"325","line":10,"column":21,"nodeType":"297","messageId":"298","endLine":10,"endColumn":31},{"ruleId":"295","severity":1,"message":"326","line":11,"column":19,"nodeType":"297","messageId":"298","endLine":11,"endColumn":27},{"ruleId":"327","severity":1,"message":"328","line":14,"column":13,"nodeType":"310","endLine":14,"endColumn":97},{"ruleId":"295","severity":1,"message":"329","line":25,"column":13,"nodeType":"297","messageId":"298","endLine":25,"endColumn":20},{"ruleId":"295","severity":1,"message":"330","line":25,"column":22,"nodeType":"297","messageId":"298","endLine":25,"endColumn":27},{"ruleId":"295","severity":1,"message":"331","line":1,"column":45,"nodeType":"297","messageId":"298","endLine":1,"endColumn":54},{"ruleId":"295","severity":1,"message":"332","line":5,"column":10,"nodeType":"297","messageId":"298","endLine":5,"endColumn":31},{"ruleId":"295","severity":1,"message":"333","line":19,"column":25,"nodeType":"297","messageId":"298","endLine":19,"endColumn":37},{"ruleId":"334","severity":1,"message":"335","line":100,"column":31,"nodeType":"336","messageId":"337","endLine":100,"endColumn":33},{"ruleId":"334","severity":1,"message":"335","line":100,"column":51,"nodeType":"336","messageId":"337","endLine":100,"endColumn":53},{"ruleId":"334","severity":1,"message":"338","line":100,"column":51,"nodeType":"336","messageId":"337","endLine":100,"endColumn":53},{"ruleId":"334","severity":1,"message":"338","line":100,"column":71,"nodeType":"336","messageId":"337","endLine":100,"endColumn":73},{"ruleId":"334","severity":1,"message":"338","line":100,"column":91,"nodeType":"336","messageId":"337","endLine":100,"endColumn":93},{"ruleId":"334","severity":1,"message":"338","line":100,"column":113,"nodeType":"336","messageId":"337","endLine":100,"endColumn":115},{"ruleId":"334","severity":1,"message":"335","line":104,"column":31,"nodeType":"336","messageId":"337","endLine":104,"endColumn":33},{"ruleId":"334","severity":1,"message":"335","line":104,"column":52,"nodeType":"336","messageId":"337","endLine":104,"endColumn":54},{"ruleId":"334","severity":1,"message":"338","line":104,"column":52,"nodeType":"336","messageId":"337","endLine":104,"endColumn":54},{"ruleId":"334","severity":1,"message":"338","line":104,"column":72,"nodeType":"336","messageId":"337","endLine":104,"endColumn":74},{"ruleId":"334","severity":1,"message":"338","line":104,"column":93,"nodeType":"336","messageId":"337","endLine":104,"endColumn":95},{"ruleId":"334","severity":1,"message":"338","line":104,"column":115,"nodeType":"336","messageId":"337","endLine":104,"endColumn":117},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useSelector' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Product' is defined but never used.","'Paginate' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'Img' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.","ArrayExpression",["341"],"'Button' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'uploading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["342"],"'uploadFileHandler' is assigned a value but never used.","'Image' is defined but never used.","'useDispatch' is defined but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'PRODUCT_DETAILS_RESET' is defined but never used.","'setItemPrice' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation",{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [dispatch, history, products, userInfo, successDelete, successCreate, availableHandler, createdProduct._id]",{"range":"347","text":"348"},"Update the dependencies array to be: [dispatch, productId, product, successUpdate, history]",{"range":"349","text":"350"},[1725,1813],"[dispatch, history, products, userInfo, successDelete, successCreate, availableHandler, createdProduct._id]",[1969,2014],"[dispatch, productId, product, successUpdate, history]"]