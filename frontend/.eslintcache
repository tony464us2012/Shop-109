[{"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\index.js":"1","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\App.js":"2","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\store.js":"3","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\CartScreen.js":"4","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\RegisterScreen.js":"7","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Header.js":"8","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProfileScreen.js":"11","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductListScreen.js":"12","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserListScreen.js":"13","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderScreen.js":"14","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserEditScreen.js":"15","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductEditScreen.js":"16","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\PlaceOrderScreen.js":"17","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderListScreen.js":"18","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\productReducers.js":"19","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\cartReducers.js":"20","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\userReducers.js":"21","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\orderReducers.js":"22","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Loader.js":"23","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Message.js":"24","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\cartActions.js":"26","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\userActions.js":"27","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Meta.js":"28","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Paginate.js":"29","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProductCarousel.js":"30","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Product.js":"31","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\productActions.js":"33","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\types.js":"34","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\MenuHeader.js":"35","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\MenuScreen.js":"36","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Beer.js":"37","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\BeerHeader.js":"38","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Sour.js":"39","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Lager.js":"40","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\IPA.js":"41","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Cider.js":"42","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\PorterandStout.js":"43","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Special.js":"44","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Ale.js":"45","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Burger.js":"46","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Appetizer.js":"47","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\ForkandKnife.js":"48","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Salad.js":"49","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Sandwich.js":"50","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Slider.js":"51","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Side.js":"52","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProfileListHeader.js":"53","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\AddOns.js":"54","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\MenuItem.js":"55","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\Beers.js":"56","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Modal.js":"57","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\CardSection.js":"58","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ConfirmationScreen.js":"59","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\BeerProduct.js":"60"},{"size":316,"mtime":1610764473383,"results":"61","hashOfConfig":"62"},{"size":2703,"mtime":1615675775061,"results":"63","hashOfConfig":"62"},{"size":1882,"mtime":1615258501140,"results":"64","hashOfConfig":"62"},{"size":4783,"mtime":1615945697864,"results":"65","hashOfConfig":"62"},{"size":808,"mtime":1615757889853,"results":"66","hashOfConfig":"62"},{"size":427,"mtime":1610904498659,"results":"67","hashOfConfig":"62"},{"size":3260,"mtime":1610838493217,"results":"68","hashOfConfig":"62"},{"size":4892,"mtime":1616466838587,"results":"69","hashOfConfig":"62"},{"size":3943,"mtime":1611282947583,"results":"70","hashOfConfig":"62"},{"size":2275,"mtime":1615520127022,"results":"71","hashOfConfig":"62"},{"size":8331,"mtime":1615943578587,"results":"72","hashOfConfig":"62"},{"size":4245,"mtime":1615758922711,"results":"73","hashOfConfig":"62"},{"size":3024,"mtime":1615687310705,"results":"74","hashOfConfig":"62"},{"size":4524,"mtime":1615751050190,"results":"75","hashOfConfig":"62"},{"size":2976,"mtime":1615756893633,"results":"76","hashOfConfig":"62"},{"size":6286,"mtime":1615759185899,"results":"77","hashOfConfig":"62"},{"size":8058,"mtime":1615855471943,"results":"78","hashOfConfig":"62"},{"size":2825,"mtime":1615684024140,"results":"79","hashOfConfig":"62"},{"size":2820,"mtime":1612149853740,"results":"80","hashOfConfig":"62"},{"size":742,"mtime":1615260996159,"results":"81","hashOfConfig":"62"},{"size":3727,"mtime":1610764473732,"results":"82","hashOfConfig":"62"},{"size":2783,"mtime":1615940521745,"results":"83","hashOfConfig":"62"},{"size":350,"mtime":1610764472928,"results":"84","hashOfConfig":"62"},{"size":295,"mtime":1610764472949,"results":"85","hashOfConfig":"62"},{"size":398,"mtime":1610764472828,"results":"86","hashOfConfig":"62"},{"size":976,"mtime":1614652708722,"results":"87","hashOfConfig":"62"},{"size":6163,"mtime":1615752421706,"results":"88","hashOfConfig":"62"},{"size":517,"mtime":1610812922076,"results":"89","hashOfConfig":"62"},{"size":644,"mtime":1614309806142,"results":"90","hashOfConfig":"62"},{"size":678,"mtime":1610935032526,"results":"91","hashOfConfig":"62"},{"size":1124,"mtime":1616548665460,"results":"92","hashOfConfig":"62"},{"size":3518,"mtime":1615854829339,"results":"93","hashOfConfig":"62"},{"size":3968,"mtime":1611537987974,"results":"94","hashOfConfig":"62"},{"size":3524,"mtime":1615681060500,"results":"95","hashOfConfig":"62"},{"size":1889,"mtime":1612230563329,"results":"96","hashOfConfig":"62"},{"size":2483,"mtime":1616546936824,"results":"97","hashOfConfig":"62"},{"size":1956,"mtime":1616547448620,"results":"98","hashOfConfig":"62"},{"size":1716,"mtime":1612230624083,"results":"99","hashOfConfig":"62"},{"size":389,"mtime":1616550524862,"results":"100","hashOfConfig":"62"},{"size":393,"mtime":1616550089452,"results":"101","hashOfConfig":"62"},{"size":385,"mtime":1616548959471,"results":"102","hashOfConfig":"62"},{"size":393,"mtime":1616550729096,"results":"103","hashOfConfig":"62"},{"size":429,"mtime":1616550595489,"results":"104","hashOfConfig":"62"},{"size":401,"mtime":1616550793778,"results":"105","hashOfConfig":"62"},{"size":385,"mtime":1616550724422,"results":"106","hashOfConfig":"62"},{"size":383,"mtime":1616464291901,"results":"107","hashOfConfig":"62"},{"size":404,"mtime":1616464298083,"results":"108","hashOfConfig":"62"},{"size":407,"mtime":1616464332804,"results":"109","hashOfConfig":"62"},{"size":379,"mtime":1616464366123,"results":"110","hashOfConfig":"62"},{"size":393,"mtime":1616464398714,"results":"111","hashOfConfig":"62"},{"size":432,"mtime":1616547330830,"results":"112","hashOfConfig":"62"},{"size":375,"mtime":1616464468030,"results":"113","hashOfConfig":"62"},{"size":951,"mtime":1612230679330,"results":"114","hashOfConfig":"62"},{"size":1377,"mtime":1611801697249,"results":"115","hashOfConfig":"62"},{"size":1389,"mtime":1611801722885,"results":"116","hashOfConfig":"62"},{"size":1379,"mtime":1611802265211,"results":"117","hashOfConfig":"62"},{"size":19937,"mtime":1615261520530,"results":"118","hashOfConfig":"62"},{"size":696,"mtime":1615174081763,"results":"119","hashOfConfig":"62"},{"size":2447,"mtime":1615759311328,"results":"120","hashOfConfig":"62"},{"size":1103,"mtime":1616548742559,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"wtb28q",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\index.js",[],["251","252"],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\App.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\store.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\HomeScreen.js",["253","254","255","256","257","258","259","260","261","262","263"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\nconst HomeScreen = () => {\r\n  \r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            <ProductCarousel />\r\n            {/* {!keyword ? (<ProductCarousel />) : (<Link to='/' className='btn btn-light'>Go Back</Link>) } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Header.js",["264","265","266"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown, Image, Badge } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n  \r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const [date, setDate] = useState(new Date())\r\n    const [loggedIn, setLoggedIn] = useState(false)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        setLoggedIn(false)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            setLoggedIn(true)\r\n        } \r\n        var timerID = setInterval( () => tick(), 1000 );\r\n        return function cleanup() {\r\n            clearInterval(timerID);\r\n        }\r\n    }, [userInfo, loggedIn, logoutHandler])\r\n    \r\n    function tick() {setDate(new Date())}\r\n    \r\n\r\n    const pillStyle = {\r\n    fontSize: '.7rem', height: '50%', marginLeft: '-14px'\r\n    }\r\n\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{padding: '0.4rem 0'}} collapseOnSelect>\r\n                   <h6 id='time'>{date.toLocaleTimeString()}</h6>\r\n                   <h6 id='time'>Order Now! We Are Open.</h6>\r\n\r\n               <Container>\r\n                   <LinkContainer to='/' className='ml-auto'>\r\n                       <Image alt='109-Logo' src='/images/109_Logo.png' variant='top' width='5%' height='5%' />\r\n                   </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                        {loggedIn && userInfo.name ? (\r\n                            <NavDropdown title={userInfo.name ? `Hi ${userInfo.name}` : ''} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/'>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        ) :  (\r\n                            <>\r\n                            <LinkContainer to='/login' id='username'>\r\n                            <Nav.Link>\r\n                            <i className=\"fas fa-sign-in-alt\"></i> Log In\r\n                            </Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/register' id='username'>\r\n                            <Nav.Link><i className=\"fas fa-user-plus\"></i> Sign Up</Nav.Link>\r\n                            </LinkContainer>\r\n                           </>)}\r\n                    {loggedIn && userInfo.isAdmin && (\r\n                               <NavDropdown title='Admin' id='adminmenu'>\r\n                               <LinkContainer to='/admin/userlist'>\r\n                                   <NavDropdown.Item>Users</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                               <LinkContainer to='/admin/productlist'>\r\n                                   <NavDropdown.Item>Products</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                               <LinkContainer to='/admin/orderlist'>\r\n                                   <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                               </LinkContainer>\r\n                           </NavDropdown>\r\n                    )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n               <LinkContainer to='/cart' style={{display: 'flex', marginRight: '1.5rem', border: 'none'}}>\r\n                    <Nav.Link style={{height: '100%'}}><i className=\"fas fa-shopping-cart\"></i>{' '}{cartItems.length > 0 ? <Badge pill variant='danger' style={pillStyle}>{cartItems.length}</Badge> : ''}</Nav.Link>\r\n                </LinkContainer>\r\n               </Container>\r\n            </Navbar>\r\n            <Navbar collapseOnSelect id='navBar2' expand='lg' bg='light' variant=\"light\">\r\n                <Nav id='navContainer2'>\r\n                <Nav.Item id='navItem'><a href='/'>HOME</a></Nav.Item>\r\n                <Nav.Item id='navItem'><a href='/menu'>MENU</a></Nav.Item>\r\n                <Nav.Item id='navItem'><a href='#'>ABOUT</a></Nav.Item>\r\n                <Nav.Item id='navItem'><a href='#'>DELIVERY</a></Nav.Item>\r\n                </Nav>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProfileScreen.js",["267"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table, ListGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { updateUserProfile } from '../actions/userActions'\r\nimport { myOrders, getOrderDetails } from '../actions/orderActions'\r\nimport dateFormat from 'dateformat'\r\nimport { MY_ORDERS_RESET, ORDER_DETAILS_RESET } from '../actions/types'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const myOrdersList = useSelector(state => state.myOrders)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = myOrdersList\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading:loadingDetails, error:errorDetails } = orderDetails\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n              dispatch(myOrders(userInfo._id))\r\n              setName(userInfo.name)\r\n              setEmail(userInfo.email)\r\n            }\r\n              return () => {\r\n                  dispatch({type: MY_ORDERS_RESET})\r\n                  dispatch({type: ORDER_DETAILS_RESET})\r\n              }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: userInfo._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    const orderDetailsHandler = (id) => {\r\n        dispatch(getOrderDetails(id))\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h1>User Profile</h1>\r\n            {errorOrders && <Message variant='danger'>{errorOrders}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loadingOrders && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                { message ? <Message variant='danger'>{message}</Message> : ''}\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2 style={{color: 'black'}}>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> :\r\n                 orders.length === 0 ?  <Message variant='info'>No Orders..</Message> :\r\n                 (\r\n                  <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ORDER #</th>\r\n                                <th>ORDER DATE</th>\r\n                                <th>TOTAL PRICE</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                          {orders.map(order => (\r\n                            <tbody>\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{dateFormat(order.date, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</td>\r\n                                    <td>${order.totalprice}</td>\r\n                                    <td>\r\n                                            <Button className='btn-sm' variant='light'  onClick={() => orderDetailsHandler(order._id)}>Details</Button>\r\n                                    </td>\r\n                                </tr>\r\n                         </tbody>\r\n                          ))}\r\n                    </Table>\r\n                  </>\r\n                )}\r\n                { loadingDetails ? <Loader/> : errorDetails ? <Message variant='danger'>{errorDetails}</Message> : order.length !== 0 ?  (\r\n                    <>\r\n                     <h2 style={{color: 'black'}}>Order #{order._id}</h2>\r\n                    <ListGroup variant='flush'>\r\n                        {order.orderItems.map(item => (\r\n                            <ListGroup.Item style={{paddingRight: '2.5rem'}}>\r\n                                <Row>\r\n                                 <Col md={3}>\r\n                                    <h5>{item.name}</h5>\r\n                                 </Col>\r\n                                 <Col md={2}>${item.price}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col md={2}></Col>\r\n                                 {item.large ? <Col md={3}>Large</Col> : ''}\r\n                                 {item.sauce ? <Col md={3}> {item.sauce}</Col> : ''}\r\n                                 {item.burger ? <Col md={3}>Burger: {item.burger}</Col> : ''}\r\n                                 {item.extraPatty ? <Col md={3}>{item.extraPatty}</Col> : ''}\r\n                                 {item.pattySwap ? <Col md={3}>{item.pattySwap}</Col> : ''}\r\n                                 {item.extras ? <Col md={3}>{item.extras.map(extra => <p>{extra}</p>)}</Col> : ''}\r\n                                 {item.sideSwap ? <Col md={3}>Side: {item.sideSwap}</Col> : ''}\r\n                                 {item.upgradeSide ? <Col md={3}>Side: {item.upgradeSide}</Col> : ''}\r\n                                 {item.fryAddOn ? <Col md={3}>Side Add: {item.fryAddOn}</Col> : ''}\r\n                                </Row>\r\n                                <Row>\r\n                                    {item.instructions ? <Col style={{marginTop: '1rem'}} md={8}>Instructions: {item.instructions}</Col> : '' }\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                            <div className=\"myOrderTotal\">\r\n                            <h2>Subtotal</h2>\r\n                            ${order.subtotal}\r\n                            </div>\r\n                            <div className=\"myOrderTotal\">\r\n                            <h2>Tax</h2>\r\n                            ${order.tax}\r\n                            </div>\r\n                            <div className=\"myOrderTotal\">\r\n                            <h2>Total</h2>\r\n                            ${order.totalprice}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    </>\r\n                ) : ''}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductListScreen.js",["268"],"import React, { useEffect, useState } from 'react'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ProductListHeader from '../components/ProfileListHeader'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { deleteProduct, createProduct, listProducts, listProductDetails, updateProduct } from '../actions/productActions'\r\nimport MenuItem from '../components/product-list-components/MenuItem'\r\nimport Beers from '../components/product-list-components/Beers'\r\nimport AddOns from '../components/product-list-components/AddOns'\r\n\r\n\r\nconst ProductListScreen = ({ history }) => {\r\n\r\n    const [tab, setTab] = useState('MenuItems')\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n    \r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete\r\n    \r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct } = productCreate\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const availableHandler = (product) => {\r\n        dispatch(updateProduct(product))\r\n    }\r\n\r\n    useEffect(() => {\r\n            dispatch(listProducts())\r\n        }, [dispatch])\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } \r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }\r\n    }, [dispatch, history, products,  userInfo, successDelete, successCreate, availableHandler])\r\n    \r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure?')) {\r\n           dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const getProductHandler = (id) => {\r\n        dispatch(listProductDetails(id))\r\n    }\r\n\r\n    const menuitems = products.filter(menuitem => menuitem.category !== 'Beer' && menuitem.category !== 'AddOns')\r\n    const beers = products.filter(beer => beer.category === 'Beer')\r\n    const addons = products.filter(addon => addon.category === 'AddOns')\r\n\r\n    const tabHandler = (tab) => {\r\n        setTab(tab)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                <ProductListHeader tabHandler={tabHandler} tab={tab}/>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Item\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n            (<>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                        </tr>\r\n                    </thead>\r\n                        {tab === 'MenuItems' ? <MenuItem menuitems={menuitems} getProductHandler={getProductHandler} deleteHandler={deleteHandler} /> :\r\n                        tab === 'Beers' ? <Beers beers={beers} getProductHandler={getProductHandler} deleteHandler={deleteHandler}/> :\r\n                        <AddOns addons={addons} getProductHandler={getProductHandler} deleteHandler={deleteHandler}/> \r\n                        }\r\n                </Table>\r\n            </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderScreen.js",["269","270"],"import React, { useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Card, Image, Button } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport dateFormat from 'dateformat'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { ORDER_DETAILS_RESET } from '../actions/types'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n   \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n       dispatch({type: ORDER_DETAILS_RESET})\r\n        }\r\n    }, [])\r\n  \r\n\r\n        return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Row>\r\n            <Col md={9}>\r\n                <h1>Order #{orderId}</h1>\r\n                    <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                            <h2>Ordered By</h2>\r\n                            <p>\r\n                              Name: {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                              Email: {order.user.email}\r\n                            </p>\r\n                            <p>\r\n                              Phone: 123-456-7890\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Placed</h2>\r\n                            <p>{dateFormat(order.date, \"dddd, mmmm dS, yyyy, h:MM:ss TT\")}</p>\r\n                        </ListGroup.Item>\r\n                        {order.orderItems.map(item => (\r\n                            <ListGroup.Item style={{paddingRight: '2.5rem'}}>\r\n                                <Row>\r\n                                 <Col md={3}>\r\n                                    <h5>{item.name}</h5>\r\n                                 </Col>\r\n                                 <Col md={2}>${item.price}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col md={2}></Col>\r\n                                 {item.large ? <Col md={3}>Large</Col> : ''}\r\n                                 {item.sauce ? <Col md={3}> {item.sauce}</Col> : ''}\r\n                                 {item.burger ? <Col md={3}>Burger: {item.burger}</Col> : ''}\r\n                                 {item.extraPatty ? <Col md={3}>{item.extraPatty}</Col> : ''}\r\n                                 {item.pattySwap ? <Col md={3}>{item.pattySwap}</Col> : ''}\r\n                                 {item.extras ? <Col md={3}>{item.extras.map(extra => <p>{extra}</p>)}</Col> : ''}\r\n                                 {item.sideSwap ? <Col md={3}>Side: {item.sideSwap}</Col> : ''}\r\n                                 {item.upgradeSide ? <Col md={3}>Side: {item.upgradeSide}</Col> : ''}\r\n                                 {item.fryAddOn ? <Col md={3}>Side Add: {item.fryAddOn}</Col> : ''}\r\n                                </Row>\r\n                                <Row>\r\n                                    {item.instructions ? <Col style={{marginTop: '1rem'}} md={8}>Instructions: {item.instructions}</Col> : '' }\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal</h2>\r\n                            ${order.subtotal}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Tax</h2>\r\n                            ${order.tax}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Total</h2>\r\n                            ${order.totalprice}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item style={{display: 'flex'}}>\r\n                        <Button type='submit' className='pay-btn' style={{margin: '0 auto'}} variant='light' size='sm' onClick={() => history.push('/admin/orderlist')}>Back To Orders</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n     )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ProductEditScreen.js",["271","272","273"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../actions/types'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    const [available, setAvailable] = useState(true)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product} = productDetails\r\n   \r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loadingUpdate, error:errorUpdate, success:successUpdate} = productUpdate\r\n\r\n    \r\n    useEffect(() => {\r\n            if(successUpdate) {\r\n                dispatch({ type: PRODUCT_UPDATE_RESET})\r\n                history.push('/admin/productlist')\r\n            } else {\r\n                if(!product.name || product._id !== productId) {\r\n                    dispatch(listProductDetails(productId))\r\n                } else {\r\n                    setName(product.name)\r\n                    setPrice(product.price)\r\n                    setImage(product.image)\r\n                    setCategory(product.category)\r\n                    setDescription(product.description)\r\n                    setAvailable(product.available)\r\n                }\r\n            }\r\n    }, [dispatch, productId, product, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            category,\r\n            description,\r\n            available\r\n        }))\r\n    }\r\n    \r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                header: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control type='number' placeholder='Enter Price' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-custom\" custom>\r\n                    <Form.File.Input isValid />\r\n                    <Form.File.Label data-browse=\"Choose File\">\r\n                        ...\r\n                    </Form.File.Label>\r\n                    </Form.File>\r\n                </div>\r\n                {/* <Form.Group controlId='image'>\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter image url' value={image} onChange={(e) => setImage(e.target.value)}></Form.Control>\r\n                    <Form.File id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n                    {uploading && <Loader />}\r\n                </Form.Group> */}\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control as='select' placeholder='Enter category' value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                        <option value='Burger'>Burger</option>\r\n                        <option value='Salad'>Salad</option>\r\n                        <option value='Appetizer'>Appetizer</option>\r\n                        <option value='ForkandKnife'>ForkandKnife</option>\r\n                        <option value='Sandwich'>Sandwich</option>\r\n                        <option value='Slider'>Slider</option>\r\n                        <option value='Side'>Side</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter description' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>Available?</Form.Label>\r\n                    <Form.Control as='select' value={available} onChange={(e) => setAvailable(e.target.value)}>\r\n                        <option value={true}>True</option>\r\n                        <option value={false}>False</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            )}\r\n        </FormContainer>\r\n      </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProductCarousel.js",["274","275","276","277","278","279"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector  } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n           <p>Carousel goes here</p>\r\n           <p>Carousel goes here2</p>\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Product.js",["280","281","282"],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\MenuHeader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\MenuScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Beer.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\BeerHeader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Sour.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Lager.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\IPA.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Cider.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\PorterandStout.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Special.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\beer-components\\Ale.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Burger.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Appetizer.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\ForkandKnife.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Salad.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Sandwich.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Slider.js",["283","284"],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\menu-components\\Side.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\ProfileListHeader.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\AddOns.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\MenuItem.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\product-list-components\\Beers.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\Modal.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"import React, { useState, useRef, Fragment, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Image, Col, Form } from 'react-bootstrap'\r\nimport { addToCart } from '../actions/cartActions'\r\nimport { PRODUCT_DETAILS_RESET } from '../actions/types'\r\nimport Loader from './Loader'\r\n\r\n\r\nconst ProductModal = ({show, onHide, id, price}) => {\r\n    const dispatch = useDispatch()\r\n   \r\n    const productDetail = useSelector(state => state.productDetails)\r\n    const { loading, product:productInfo } = productDetail\r\n    const { name, image, description, category, available } = productInfo\r\n    \r\n      const productList = useSelector(state => state.productList)\r\n      const { products } = productList\r\n\r\n      const [itemPrice, setItemPrice] = useState(price)\r\n      const [extraPatty, setExtraPatty] = useState('')\r\n      const [pattySwap, setPattySwap] = useState('')\r\n      const [sideSwap, setSideSwap] = useState('')\r\n      const [upgradeSide, setUpgradeSide] = useState('')\r\n      const [extras, setExtras] = useState([])\r\n      const [large, setLarge] = useState(false)\r\n      const [sauce, setSauce] = useState('')\r\n      const [burger, setBurger] = useState('')\r\n      const [fryAddOn, setFryAddOn] = useState('')\r\n      const [instructions, setInstructions] = useState('')\r\n      const ref = useRef(price)\r\n\r\n      \r\n    const addons = products.filter(product => product.category === 'AddOns')\r\n    const largefrysampler = addons.filter(sampler =>  sampler.addOnType === 'LargeFrySampler')\r\n    const [{ price:samplerPrice, available:samplerAvailable }] = largefrysampler\r\n    const largechickenwings = addons.filter(wings => wings.addOnType === 'LargeChickenWings')\r\n    const [{price:wingPrice, available:wingAvailable}] = largechickenwings\r\n    const addMeat = addons.filter(meat => meat.name === 'Extra Meat Patty')\r\n    const [{name:meatName, price:meatPrice, available:meatAvailable}] = addMeat\r\n    const chicken = addons.filter(chk => chk.addOnType === 'Chicken')\r\n    const [{name:chickenName, price:chickenPrice, available:chickenAvailable}] = chicken\r\n    const bacon = addons.filter(bcn => bcn.addOnType === 'Bacon')\r\n    const [{name:baconName, price:baconPrice, available:baconAvailable}] = bacon\r\n\r\n      const handleChange = (e) => {setInstructions(e.target.value)}\r\n      const radioChange = (e) => {\r\n        let { name, value } = e.target\r\n        let newValue = extractPrice(value)\r\n\r\n        if (name === 'frysampler' || name === 'chickenwings') {\r\n          if (newValue) {\r\n            setLarge(true)\r\n            ref.current = ref.current + newValue\r\n          } else {\r\n            setLarge(false)\r\n            ref.current = price\r\n          }\r\n        }\r\n        if(name === 'sauce') {\r\n          setSauce(value)\r\n        }\r\n        if (name === 'meat' && e.target.checked) {\r\n          setExtraPatty(value)\r\n          ref.current = ref.current + (extractPrice(value))\r\n        }\r\n        if (name === 'meat' && !e.target.checked) {\r\n          setExtraPatty('')\r\n          ref.current = ref.current - (extractPrice(value))\r\n        }\r\n        if (name === 'SwapOption') {\r\n          if (!pattySwap){\r\n            setPattySwap(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(pattySwap)\r\n            setPattySwap(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'SwapSide') {\r\n          if (!sideSwap) {\r\n            setSideSwap(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(sideSwap)\r\n            setSideSwap(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'UpgradeSide') {\r\n          if (!upgradeSide) {\r\n            setUpgradeSide(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(upgradeSide)\r\n            setUpgradeSide(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'Extras' && e.target.checked || name === 'bacon' && e.target.checked || name === 'chicken' && e.target.checked) {\r\n          setExtras([...extras, value])\r\n          ref.current = ref.current + newValue\r\n        }\r\n        if (name === 'Extras' && !e.target.checked || name === 'bacon' && !e.target.checked || name === 'chicken' && !e.target.checked) {\r\n         const newArray = extras.filter(x => x !== value)\r\n         setExtras(newArray)\r\n         ref.current = ref.current - newValue \r\n        }\r\n        if (name === 'burger') {\r\n          if (!burger) {\r\n            setBurger(value)\r\n            ref.current = ref.current + (extractPrice(value))\r\n          } else {\r\n            const prevPrice = extractPrice(burger)\r\n            setBurger(value)\r\n            ref.current = ref.current - prevPrice + (extractPrice(value))\r\n          }\r\n        }\r\n        if (name === 'fryAddOn') {\r\n          setFryAddOn(value)\r\n          ref.current = ref.current + newValue\r\n        }\r\n        }\r\n\r\n    const extractPrice = (string) => {\r\n      if(string) {\r\n        return Number(string.split('+')[1])\r\n      } else {\r\n        return 0\r\n      }\r\n    }\r\n\r\n    const addToCartHandler = (e) => {\r\n      e.preventDefault()\r\n      const cartItem = {\r\n        id,\r\n        name,\r\n        image,\r\n        price: ref.current,\r\n        extraPatty, \r\n        pattySwap,\r\n        sideSwap,\r\n        upgradeSide,\r\n        extras,\r\n        large,\r\n        sauce, \r\n        burger,\r\n        fryAddOn,\r\n        instructions\r\n      }\r\n      onHide()\r\n      dispatch(addToCart(cartItem))\r\n    }\r\n    \r\n    const white = {backgroundColor: 'white', color: 'grey', paddingBottom: '1rem'}\r\n\r\n    return (\r\n        <>\r\n            { \r\n              loading ? <Loader /> :\r\n                <Modal\r\n                  size=\"lg\"\r\n                  aria-labelledby=\"contained-modal-title-vcenter\"\r\n                  centered\r\n                  show={show}\r\n                  onHide={onHide}\r\n                >\r\n                  <Modal.Header closeButton style={white}>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                      <Col>{name}</Col>\r\n                    </Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body style={white}>\r\n                      {description ?<Col> <p> {description} </p></Col> : ''}\r\n                      {image ? <Col ><Image src={image} alt={name}/></Col> : ''}\r\n                      <Form onSubmit={addToCartHandler}>\r\n                        {name === 'Fry Sampler' ? \r\n                         <Fragment>\r\n                          <h6>Select Size:</h6>\r\n                            <input type=\"radio\" id=\"frysampler\" name=\"frysampler\" value={`Small +0`} onChange={radioChange} required />\r\n                            <label htmlFor=\"smallfrysampler\"> Small </label><br/>\r\n                            {samplerAvailable ? <><input type=\"radio\" id=\"frysampler\" name=\"frysampler\" value={`Large +${samplerPrice}`} onChange={radioChange} required/>\r\n                            <label htmlFor=\"largefrysampler\">{`Large +${samplerPrice}`}</label></> : ''}\r\n                         </Fragment>\r\n                        : ''\r\n                      }\r\n                        {name === 'Chicken Wings 8 Piece' ? \r\n                         <Fragment>\r\n                          <h6>Select Size:</h6>\r\n                            <input type=\"radio\" name=\"chickenwings\" value={`8 Pieces +0`} onChange={radioChange} required />\r\n                            <label htmlFor=\"chickenwings\"> 8 Pieces </label><br/>\r\n                            {wingAvailable ? <><input type=\"radio\" name='chickenwings' value={`15 Pieces +${wingPrice}`} onChange={radioChange} required/>\r\n                            <label htmlFor='chickenwings'>{`15 Pieces +${wingPrice}`}</label></> : ''}\r\n                         </Fragment>\r\n                        : ''\r\n                      }\r\n                      {name === 'Chicken Wings 8 Piece' || name === 'Duck Wings' ? \r\n                      <Form.Group>\r\n                       <h6>Select Sauce:</h6>\r\n                         <input type=\"radio\" name=\"sauce\" value={'Asian Chili Sauce'} onChange={radioChange} required />\r\n                         <Form.Label htmlFor=\"sauce\">Asian Chili Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'Blue Cheese BBQ Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>Blue Cheese BBQ Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'Honey Ginger Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>Honey Ginger Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'House BBQ Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>House BBQ Sauce</Form.Label><br/>\r\n                         <input type=\"radio\" name='sauce' value={'Spicy Buffalo Sauce'} onChange={radioChange} required/>\r\n                         <Form.Label htmlFor='sauce'>Spicy Buffalo Sauce</Form.Label>\r\n                      </Form.Group>\r\n                     : ''\r\n                      }\r\n                      { category === 'Burger' ? \r\n                        <Fragment>\r\n                          { meatAvailable ? \r\n                          <Form.Group>\r\n                            <h6>Add Ons</h6>\r\n                              <input type=\"checkbox\" name=\"meat\" selected={extraPatty} value={`${meatName} +${meatPrice}`} onChange={radioChange}/>\r\n                              <Form.Label htmlFor=\"meat\">{`${meatName} +${meatPrice}`}</Form.Label><br/>\r\n                          </Form.Group> : ''}\r\n                          <Form.Group>\r\n                            <h6>Swap Patty</h6>\r\n                            <div id=\"SwapPatty\">\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'SwapOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" className=\"checkbox\"  name='SwapOption' selected={`${addon.name} +${addon.price}` === pattySwap } value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"SwapOption\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                            </div>\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <h6>Extras</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'Extras').map(addon => \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"Extras\" value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"Extras\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <h6>Swap Side</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'SwapSideOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"SwapSide\" disabled={upgradeSide} selected={`${addon.name} +${addon.price}` === sideSwap } value={`${addon.name} +${addon.price}`}  onChange={radioChange}/>\r\n                                      <Form.Label htmlFor=\"SwapSide\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <h6>Upgrade Side</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'UpgradeOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"UpgradeSide\" disabled={sideSwap} selected={`${addon.name} +${addon.price}` === upgradeSide } value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"UpgradeSide\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n\r\n                        </Fragment>: ''\r\n                      }\r\n                      { category === 'Salad' && name !== 'Burger In A Bowl' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Add-Ons</h6>\r\n                            {\r\n                              name === 'Caesar Salad' && baconAvailable ? \r\n                              <>\r\n                              <input type=\"checkbox\" name=\"bacon\" value={`${baconName} +${baconPrice}`} onChange={radioChange} />\r\n                              <Form.Label htmlFor=\"Bacon\">{`${baconName} +${baconPrice}`}</Form.Label><br/>\r\n                          </> : ''\r\n                            }\r\n                              {\r\n                                chickenAvailable ? \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"chicken\" value={`${chickenName} +${chickenPrice}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"sauce\">{`${chickenName} +${chickenPrice}`}</Form.Label><br/>\r\n                                  </> : ''\r\n                                \r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      { name === 'Burger In A Bowl' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Select Burger</h6>\r\n                              {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'BurgerInABowl').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"burger\" value={`${addon.name} +${addon.price}`} onChange={radioChange} required />\r\n                                      <Form.Label htmlFor=\"Burger\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      { name === 'Homemade Mac & Cheese' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Add-Ons</h6>\r\n                              {\r\n                                baconAvailable ? \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"bacon\" value={`${baconName} +${baconPrice}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"Bacon\">{`${baconName} +${baconPrice}`}</Form.Label><br/>\r\n                                  </> : ''\r\n                              }\r\n                              {\r\n                                chickenAvailable ? \r\n                                  <>\r\n                                      <input type=\"checkbox\" name=\"chicken\" value={`${chickenName} +${chickenPrice}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"Chicken\">{`${chickenName} +${chickenPrice}`}</Form.Label><br/>\r\n                                  </> : ''\r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      { category === 'Sandwich' ? \r\n                        <Fragment>\r\n                          <Form.Group>\r\n                            <h6>Upgrade Option</h6>\r\n                            {\r\n                                addons.filter(addon => addon.available && addon.addOnType === 'UpgradeOption').map(addon => \r\n                                  <>\r\n                                      <input type=\"radio\" name=\"UpgradeSide\" value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                      <Form.Label htmlFor=\"UpgradeSide\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                  </>\r\n                                  )\r\n                              }\r\n                          </Form.Group>\r\n                        </Fragment>: ''\r\n                      }\r\n                      {\r\n                        name === 'Fries' ||  name === 'Tots' ? \r\n                        <Fragment>\r\n                        <Form.Group>\r\n                          <h6>Add-Ons</h6>\r\n                          {\r\n                              addons.filter(addon => addon.available && addon.name === 'Loaded up with Cheese & Applewood Smoked Bacon Bits').map(addon => \r\n                                <>\r\n                                    <input type=\"radio\" name=\"fryAddOn\" value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                    <Form.Label htmlFor=\"fryAddOn\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                </>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n                      </Fragment>: ''\r\n                      }\r\n                      {\r\n                        name === 'Sweet Potato Fries' ||  name === 'Sweet Potato Tots' ? \r\n                        <Fragment>\r\n                        <Form.Group>\r\n                          <h6>Add-Ons</h6>\r\n                          {\r\n                              addons.filter(addon => addon.available && addon.name === 'Loaded up With Caramel & Cinnamon').map(addon => \r\n                                <>\r\n                                    <input type=\"radio\" name=\"fryAddOn\" value={`${addon.name} +${addon.price}`} onChange={radioChange} />\r\n                                    <Form.Label htmlFor=\"fryAddOn\">{`${addon.name} +${addon.price}`}</Form.Label><br/>\r\n                                </>\r\n                                )\r\n                            }\r\n                        </Form.Group>\r\n                      </Fragment>: ''\r\n                      }\r\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>List Any Preferences</Form.Label>\r\n                        <Form.Text as=\"textarea\" placeholder='allergies, etc.' width='100%' value={instructions} onChange={handleChange} rows={3} />\r\n                      </Form.Group>\r\n                    {available ? \r\n                    <input type='submit' value={`Add To Cart $${ref.current ? ref.current : itemPrice}`}/> :\r\n                    <input type='submit' value='Out of Stock' disabled /> \r\n                  }\r\n                      </Form>\r\n                  </Modal.Body>\r\n                </Modal>\r\n            }\r\n        </>\r\n            );\r\n}\r\n\r\nexport default ProductModal\r\n","C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\CardSection.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\screens\\ConfirmationScreen.js",[],"C:\\Users\\Anthony\\Documents\\SHOP-109\\frontend\\src\\components\\BeerProduct.js",["300","301"],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":1,"column":17,"nodeType":"308","messageId":"309","endLine":1,"endColumn":26},{"ruleId":"306","severity":1,"message":"310","line":2,"column":10,"nodeType":"308","messageId":"309","endLine":2,"endColumn":14},{"ruleId":"306","severity":1,"message":"311","line":3,"column":10,"nodeType":"308","messageId":"309","endLine":3,"endColumn":21},{"ruleId":"306","severity":1,"message":"312","line":3,"column":23,"nodeType":"308","messageId":"309","endLine":3,"endColumn":34},{"ruleId":"306","severity":1,"message":"313","line":4,"column":10,"nodeType":"308","messageId":"309","endLine":4,"endColumn":13},{"ruleId":"306","severity":1,"message":"314","line":4,"column":15,"nodeType":"308","messageId":"309","endLine":4,"endColumn":18},{"ruleId":"306","severity":1,"message":"315","line":5,"column":8,"nodeType":"308","messageId":"309","endLine":5,"endColumn":15},{"ruleId":"306","severity":1,"message":"316","line":6,"column":8,"nodeType":"308","messageId":"309","endLine":6,"endColumn":16},{"ruleId":"306","severity":1,"message":"317","line":7,"column":8,"nodeType":"308","messageId":"309","endLine":7,"endColumn":15},{"ruleId":"306","severity":1,"message":"318","line":8,"column":8,"nodeType":"308","messageId":"309","endLine":8,"endColumn":14},{"ruleId":"306","severity":1,"message":"319","line":9,"column":10,"nodeType":"308","messageId":"309","endLine":9,"endColumn":22},{"ruleId":"320","severity":1,"message":"321","line":20,"column":11,"nodeType":"322","endLine":23,"endColumn":6,"suggestions":"323"},{"ruleId":"324","severity":1,"message":"325","line":99,"column":40,"nodeType":"326","endLine":99,"endColumn":52},{"ruleId":"324","severity":1,"message":"325","line":100,"column":40,"nodeType":"326","endLine":100,"endColumn":52},{"ruleId":"306","severity":1,"message":"310","line":3,"column":10,"nodeType":"308","messageId":"309","endLine":3,"endColumn":14},{"ruleId":"320","severity":1,"message":"327","line":46,"column":8,"nodeType":"328","endLine":46,"endColumn":96,"suggestions":"329"},{"ruleId":"306","severity":1,"message":"330","line":2,"column":37,"nodeType":"308","messageId":"309","endLine":2,"endColumn":42},{"ruleId":"320","severity":1,"message":"331","line":21,"column":8,"nodeType":"328","endLine":21,"endColumn":10,"suggestions":"332"},{"ruleId":"306","severity":1,"message":"333","line":19,"column":12,"nodeType":"308","messageId":"309","endLine":19,"endColumn":21},{"ruleId":"320","severity":1,"message":"334","line":47,"column":8,"nodeType":"328","endLine":47,"endColumn":53,"suggestions":"335"},{"ruleId":"306","severity":1,"message":"336","line":62,"column":11,"nodeType":"308","messageId":"309","endLine":62,"endColumn":28},{"ruleId":"306","severity":1,"message":"310","line":2,"column":10,"nodeType":"308","messageId":"309","endLine":2,"endColumn":14},{"ruleId":"306","severity":1,"message":"330","line":3,"column":20,"nodeType":"308","messageId":"309","endLine":3,"endColumn":25},{"ruleId":"306","severity":1,"message":"311","line":4,"column":10,"nodeType":"308","messageId":"309","endLine":4,"endColumn":21},{"ruleId":"306","severity":1,"message":"312","line":4,"column":23,"nodeType":"308","messageId":"309","endLine":4,"endColumn":34},{"ruleId":"306","severity":1,"message":"337","line":10,"column":21,"nodeType":"308","messageId":"309","endLine":10,"endColumn":31},{"ruleId":"306","severity":1,"message":"338","line":11,"column":19,"nodeType":"308","messageId":"309","endLine":11,"endColumn":27},{"ruleId":"306","severity":1,"message":"339","line":4,"column":9,"nodeType":"308","messageId":"309","endLine":4,"endColumn":13},{"ruleId":"324","severity":1,"message":"340","line":14,"column":13,"nodeType":"326","endLine":14,"endColumn":97},{"ruleId":"341","severity":1,"message":"342","line":16,"column":21,"nodeType":"326","endLine":16,"endColumn":62},{"ruleId":"306","severity":1,"message":"313","line":2,"column":10,"nodeType":"308","messageId":"309","endLine":2,"endColumn":13},{"ruleId":"306","severity":1,"message":"343","line":2,"column":15,"nodeType":"308","messageId":"309","endLine":2,"endColumn":23},{"ruleId":"306","severity":1,"message":"307","line":1,"column":45,"nodeType":"308","messageId":"309","endLine":1,"endColumn":54},{"ruleId":"306","severity":1,"message":"344","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":31},{"ruleId":"306","severity":1,"message":"345","line":19,"column":25,"nodeType":"308","messageId":"309","endLine":19,"endColumn":37},{"ruleId":"346","severity":1,"message":"347","line":100,"column":31,"nodeType":"348","messageId":"349","endLine":100,"endColumn":33},{"ruleId":"346","severity":1,"message":"347","line":100,"column":51,"nodeType":"348","messageId":"349","endLine":100,"endColumn":53},{"ruleId":"346","severity":1,"message":"350","line":100,"column":51,"nodeType":"348","messageId":"349","endLine":100,"endColumn":53},{"ruleId":"346","severity":1,"message":"350","line":100,"column":71,"nodeType":"348","messageId":"349","endLine":100,"endColumn":73},{"ruleId":"346","severity":1,"message":"350","line":100,"column":91,"nodeType":"348","messageId":"349","endLine":100,"endColumn":93},{"ruleId":"346","severity":1,"message":"350","line":100,"column":113,"nodeType":"348","messageId":"349","endLine":100,"endColumn":115},{"ruleId":"346","severity":1,"message":"347","line":104,"column":31,"nodeType":"348","messageId":"349","endLine":104,"endColumn":33},{"ruleId":"346","severity":1,"message":"347","line":104,"column":52,"nodeType":"348","messageId":"349","endLine":104,"endColumn":54},{"ruleId":"346","severity":1,"message":"350","line":104,"column":52,"nodeType":"348","messageId":"349","endLine":104,"endColumn":54},{"ruleId":"346","severity":1,"message":"350","line":104,"column":72,"nodeType":"348","messageId":"349","endLine":104,"endColumn":74},{"ruleId":"346","severity":1,"message":"350","line":104,"column":93,"nodeType":"348","messageId":"349","endLine":104,"endColumn":95},{"ruleId":"346","severity":1,"message":"350","line":104,"column":115,"nodeType":"348","messageId":"349","endLine":104,"endColumn":117},{"ruleId":"324","severity":1,"message":"340","line":13,"column":13,"nodeType":"326","endLine":13,"endColumn":97},{"ruleId":"341","severity":1,"message":"342","line":15,"column":21,"nodeType":"326","endLine":15,"endColumn":62},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Product' is defined but never used.","'Paginate' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'listProducts' is defined but never used.","react-hooks/exhaustive-deps","The 'logoutHandler' function makes the dependencies of useEffect Hook (at line 33) change on every render. To fix this, wrap the definition of 'logoutHandler' in its own useCallback() Hook.","VariableDeclarator",["353"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'createdProduct._id'. Either include it or remove the dependency array.","ArrayExpression",["354"],"'Image' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["355"],"'uploading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["356"],"'uploadFileHandler' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'Card' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CardDeck' is defined but never used.","'PRODUCT_DETAILS_RESET' is defined but never used.","'setItemPrice' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},"Wrap the definition of 'logoutHandler' in its own useCallback() Hook.",{"range":"365","text":"366"},"Update the dependencies array to be: [dispatch, history, products, userInfo, successDelete, successCreate, availableHandler, createdProduct._id]",{"range":"367","text":"368"},"Update the dependencies array to be: [dispatch]",{"range":"369","text":"370"},"Update the dependencies array to be: [dispatch, productId, product, successUpdate, history]",{"range":"371","text":"372"},[681,751],"useCallback(() => {\r\n        dispatch(logout())\r\n        setLoggedIn(false)\r\n    })",[1796,1884],"[dispatch, history, products, userInfo, successDelete, successCreate, availableHandler, createdProduct._id]",[716,718],"[dispatch]",[1913,1958],"[dispatch, productId, product, successUpdate, history]"]